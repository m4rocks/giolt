---
import LogoTransparent from "@/assets/logo-transparent.svg";
import { OrganizationSwitcher, UserButton } from "@clerk/astro/components";
import {
	ArrowLeftIcon,
	PanelLeftOpenIcon,
	ReceiptTextIcon,
} from "@lucide/astro";

interface Props {
	logo?: boolean;
	logoHref?: string;
	buttons?: {
		text: string;
		href: string;
		external?: boolean;
	}[];
	organizationPopup?: boolean;
	enableDrawer?: boolean;
	returnButton?: string;
	returnText?: string;
	enableAccountButton?: boolean;
}

const {
	logo = true,
	logoHref = "/",
	buttons = [],
	organizationPopup = false,
	enableAccountButton = false,
	enableDrawer = false,
	returnButton = undefined,
	returnText = "Back home",
} = Astro.props;
---

<div class="navbar"></div>
{enableDrawer ?
	<div class="h-10 lg:hidden"></div>
: null}

<nav
	class="navbar top-0 left-0 right-0 fixed glass bg-base-100/50 shadow-sm z-50 px-4"
>
	<div class="flex-1 flex flex-row items-center gap-1">
		{returnButton ?
			<a
				href={returnButton}
				class="btn btn-ghost"
				aria-label="Return"
			>
				<ArrowLeftIcon/>
				<span class="hidden md:inline">{returnText}</span>
			</a>
		: null}
		{logo && !returnButton ?
			<a
				href={logoHref}
				aria-label="Logo"
				class="btn btn-ghost btn-circle"
			>
				<LogoTransparent
					class="*:fill-base-content size-8"
				/>
			</a>
		: null}
		<span class="badge badge-sm badge-outline">
			Alpha
		</span>
	</div>
	<div class="flex-none flex flex-row items-center gap-2">
		{buttons.map((b) => (
			<a
				href={b.href}
				target={b.external ? "_blank" : "_self"}
				class="btn btn-ghost"
			>
				{b.text}
			</a>
		))}
		{enableAccountButton ? (
			<>
				{!organizationPopup ?
					<OrganizationSwitcher
						hidePersonal
						afterCreateOrganizationUrl="/subscribe"
						afterSelectOrganizationUrl="/dashboard"
						afterLeaveOrganizationUrl="/select"
						organizationProfileMode="navigation"
						organizationProfileUrl="/dashboard/general"
					/>
					:
					<OrganizationSwitcher
						hidePersonal
						afterCreateOrganizationUrl="/subscribe"
						afterSelectOrganizationUrl="/dashboard"
						afterLeaveOrganizationUrl="/select"
						organizationProfileMode="modal"
					/>
				}
				<UserButton
					afterSwitchSessionUrl="/dashboard"
				>
					<UserButton.MenuItems>
						<UserButton.Link
							label="Billing"
							href="/personal-billing"
						>
							<ReceiptTextIcon slot="label-icon" class="size-4" />
						</UserButton.Link>
					</UserButton.MenuItems>
				</UserButton>
			</>
		) : null}
	</div>
</nav>

{enableDrawer ?
	<div
		class="fixed top-16 left-0 right-0 glass bg-base-100/50 shadow-sm lg:hidden z-40"
	>
		<label
			for="drawer"
			class="btn btn-ghost"
		>
			<PanelLeftOpenIcon/>
			Open Drawer
		</label>
	</div>
: null}
