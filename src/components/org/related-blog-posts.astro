---
import { blogPosts } from "@/db/schema";
import { db } from "@/lib/db";
import { and, eq, ne, desc } from "drizzle-orm";
import BlogDetails from "./blog-details.astro";

interface Props {
	orgId: string;
	currentPostId: number;
}

const { orgId, currentPostId } = Astro.props;

const posts = await db
	.select()
	.from(blogPosts)
	.where(
		and(
			eq(blogPosts.organizationId, orgId),
			eq(blogPosts.draft, false),
			ne(blogPosts.id, currentPostId),
		),
	)
	.orderBy(desc(blogPosts.date))
	.limit(3);
---

{posts.length > 0 ?
	<div>
		<h2 class="text-xl font-bold text-base-content/75">
			Other posts
		</h2>
		<div class="divider my-0"></div>
		<ul class="list">
			{posts.map((post) => (
				<a
					href={`/blog/${post.id}`}
					class="list-row bg-base-100 hover:brightness-105 transition-all"
				>
					<div>
						<p class="text-xl font-bold">
							{post.title}
						</p>
						<p class="text-base-content/75 mb-2">
							{post.description}
						</p>
						<BlogDetails
							orgId={orgId}
							writerId={post.writerId}
							readingTime={post.readingTime}
							date={post.date}
						/>
					</div>
				</a>
			))}
		</ul>
	</div>
: null}