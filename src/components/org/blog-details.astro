---
import { type OrganizationMembership, clerkClient } from "@clerk/astro/server";

interface Props {
	orgId: string;
	writerId: string | null;
	readingTime: number;
	date: Date;
}

let teamMember: OrganizationMembership | null = null;

if (Astro.props.writerId) {
	teamMember = await clerkClient(Astro)
		.organizations.getOrganizationMembershipList({
			organizationId: Astro.props.orgId,
		})
		.then((memberships) => {
			return memberships.data.find(
				(membership) => membership.id === Astro.props.writerId,
			);
		})
		.then((teamMember) => {
			if (!teamMember) {
				console.error("Team member not found");
				return null;
			}
			return teamMember;
		});
}
---

<div
	class="flex items-center gap-2"
>

	{teamMember ?
		<img
			src={teamMember.publicUserData?.imageUrl}
			class="w-6 h-6 rounded-full"
		/>
	: null}
	<div>
		{teamMember ?
			<p>
				{`${teamMember.publicUserData?.firstName} ${teamMember.publicUserData?.lastName}`}
			</p>
		: null}
		<p class="text-sm text-base-content/75">
			{new Date(Astro.props.date).toLocaleDateString("en-US", {
				month: "short",
				day: "numeric",
				year: "numeric",
			})}
			&middot;
			{Astro.props.readingTime} min read
		</p>
	</div>
</div>
