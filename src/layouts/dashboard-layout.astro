---
import "@/styles/global.css";
import "sonner/dist/styles.css";
import "@fontsource-variable/bricolage-grotesque";
import { getImage } from "astro:assets";
import { ClientRouter } from "astro:transitions";
import logoDark from "@/assets/logo-dark.svg";
import logoLight from "@/assets/logo-light.svg";
import DrawerItems from "@/components/dashboard/drawer-items.astro";
import Navbar from "@/components/navbar.astro";
import { Toaster } from "@/components/toaster";
import Analytics from "@vercel/analytics/astro";

const faviconDark = await getImage({
	src: logoDark,
	format: "svg",
	width: 32,
	height: 32,
});
const faviconLight = await getImage({
	src: logoLight,
	format: "svg",
	width: 32,
	height: 32,
});

interface Props {
	class?: string;
	title?: string;
	returnButton?: string;
	returnText?: string;
	hideDrawer?: boolean;
	organizationPopup?: boolean;
}

const props = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link
			rel="icon"
			type="image/svg+xml"
			media="(prefers-color-scheme: dark)"
			href={faviconLight.src}
		/>
		<link
			rel="icon"
			type="image/svg+xml"
			media="(prefers-color-scheme: light)"
			href={faviconDark.src}
		/>
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>
			{Astro.props.title ? `${Astro.props.title} - Giolt` : "Giolt - Where volunteers find everything, and organizations save time."}
		</title>
		<ClientRouter/>
	</head>
	<body class="flex flex-col min-h-svh">
		<div class="drawer lg:drawer-open">
			<input id="drawer" type="checkbox" class="drawer-toggle" />
			<div class="drawer-content">
				<Navbar
					enableAccountButton
					organizationPopup={props.organizationPopup}
					returnButton={props.returnButton}
					returnText={props.returnText}
					enableDrawer={!props.hideDrawer}
				/>
				<main class={`flex-1 p-8 ${props.class ?? ""}`}>
					<slot/>
				</main>
			</div>
			<div hidden={props.hideDrawer} class="drawer-side pt-16 z-40">
				<label for="drawer" aria-label="close sidebar" class="drawer-overlay"></label>
				<DrawerItems transition:persist/>
			</div>
		</div>
		<Toaster
			client:load
			transition:persist
		/>
		<Analytics />
	</body>
</html>
