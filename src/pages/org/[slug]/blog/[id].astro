---
import BlogDetails from "@/components/org/blog-details.astro";
import RelatedBlogPosts from "@/components/org/related-blog-posts.astro";
import RelatedProject from "@/components/org/related-project.astro";
import { blogPosts, organizations, projects } from "@/db/schema";
import Layout from "@/layouts/tenant-layout.astro";
import { mdClassName } from "@/lib/content";
import { and, eq } from "drizzle-orm";

const { id, slug } = Astro.params;
const db = Astro.locals.db;

if (!slug) {
	return Astro.redirect("/");
}

if (!id) {
	return Astro.redirect("/");
}

const org = await db
	.select()
	.from(organizations)
	.where(
		and(
			eq(organizations.slug, slug),
			eq(organizations.subscriptionStatus, "active"),
		),
	)
	.get();

if (!org) {
	return Astro.redirect(import.meta.env.SITE);
}

const row = await db
	.select()
	.from(blogPosts)
	.innerJoin(projects, eq(projects.id, blogPosts.relatedProjectId))
	.where(
		and(
			eq(blogPosts.id, Number.parseInt(id)),
			eq(blogPosts.organizationId, org.id),
			eq(blogPosts.draft, false),
		),
	)
	.get();

const post = row?.blog_posts;
const project = row?.projects;

if (!post) {
	return Astro.redirect("/");
}
---

<Layout
	title={post.title}
	orgName={org.name}
	theme={org.theme}
	navbar
	favicon={org.logoUrl}
	hideGioltBranding={org.hideGioltBranding}
	class="container"
>
	<h1
		class="text-5xl md:text-7xl font:bold"
	>
		{post.title}
	</h1>
	<p
		class="text-base-content/75 mb-2"
	>
		{post.description}
	</p>
	<BlogDetails
		orgId={org.id}
		readingTime={post.readingTime}
		writerId={post.writerId}
		date={post.date}
	/>
	<RelatedProject
		project={project}
	/>
	<div
		set:html={post.content}
		class={`${mdClassName} my-4`}
	></div>

	<RelatedBlogPosts
		orgId={org.id}
		currentPostId={post.id}
	/>
</Layout>
